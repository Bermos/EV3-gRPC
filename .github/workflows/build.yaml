name: Build and release

on:
  push:
  release:
    types:
      - created

jobs:
  build-go-server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Install Protoc
        uses: arduino/setup-protoc@v1

      - name: Generate go server
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          protoc --go_out=. --go-grpc_out=. ./protobuff/*.proto

      - name: Build package
        run: |
          go build -v -o ev3api-server -ldflags="-s -w" cmd/main.go
        env:
          GOOS: linux
          GOARCH: arm
          GOARM: 5

      - name: Test
        run: |
          go test cmd/main.go -json > TestResults.json

      - name: Upload Go test results
        uses: actions/upload-artifact@v3
        with:
          name: Go-results
          path: TestResults.json

      - name: Upload Go binary
        uses: actions/upload-artifact@v3
        with:
          name: Go-binary
          path: ev3api-server
          retention-days: 7


  upload-release-assets:
    runs-on: ubuntu-latest
    needs: [build-go-server]
    if: github.event_name == 'release' # && github.event.action == 'created'
    steps:
      - name: Download go server
        uses: actions/download-artifact@v3
        with:
          name: Go-binary

      - name: Upload Go server Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./ev3api-server
          asset_name: ev3api-server
          asset_content_type: application/octet-stream
